"""
普通参数：
    普通参数就是最一般的参数传递形式。函数定义处会定义需要的形参，然后函数调用处，需要与形参一一对应地传入实参。
    示例：
"""
def f(a, b):
    print(a,b)
f(1, 2)
"""
指定参数：
    指定参数就是在函数调用时，给传入的实参加上其对应的形参的参数名，这样实参的顺序就可以不用和形参完全一一对应的顺序。
    示例：
"""
def f(a, b):
    print(a, b)
f(b=1, a=2)
"""
默认参数：
    默认参数是在函数的形参处直接设定好一个参数的值，在函数调用的时候，可以不传入对应这个形参的实参，当不传入参数时，会直接取这个设定的默认值。当传入时，会用传入的值。
    此外要注意，有默认值的参数，需要放在所有无默认值的参数之后。
    示例：
"""
def f (a, b=1, c=2):
    print(a,b,c)
f(1,2)
"""
动态参数：
    动态参数就是可以在函数的形参处不指定具体的名称与个数，在函数被调用时，传入的实参皆可在函数中获得。
    动态参数有两种形式，一种以列表的形式，一种以字典的形式。
    当以列表形式的时候，在函数调用时，实参的传递与普通的方式类似，直接传入；形参获取到的是一个列表的形式，元素为传入的每个实参。
    示例：
"""
def f(*args):
    for i in args:
        print(i)
f(1,23,3)
"""
    当以字典形式时，在函数调用时，实参传递类似制定参数的方式；形参获得的是一个字典。
    示例：
"""
def f(**kargs):
    for k, v in kargs.items():
        print(k, v)
f(k1=1, k2=2)
"""
    此外两种形式也可以一起使用，并且也可以和其他类型如普通参数，有默认值的参数一起使用。
    此外需要注意的是，列表形式的动态参数需要放在普通参数和默认值参数之后，字典形式的动态参数，需要放在所有类型的参数之后。
    示例：
"""
def f(a, b=1, *args, **kargs):
    print(a,b)
    for i in args:
        print(i)
    for k, v in kargs.items():
        print(k, v)
f(1,2,22,33,k1=4,k2=5)
"""
另外还有种向函数传递默认参数的方法，即在函数调用时，在传入的列表前加*，在传入的字典前加**，这样被传入的参数就不会被当做是一整个列表或字典，而是动态参数。
示例：
"""
a = [1,2]
k = {'k1':1, 'k2':2}
def f(*args, **kargs):
    for i in args:
        print(i)
    for k, v in kargs.items():
        print(k, v)
f(*a, **k)
