运行环境：python 3.5
博客地址：http://www.cnblogs.com/nigel-woo/p/5575167.html


文件说明：
exercise1.py是实现本次计算器作业的文件。 unit_test.py 是使用了unittest库，对实现计算器的Calculator类进行测试验证的单元测试。

使用说明：
在exercise1.py中通过ArgumentParser库，实现了命令行入参传递表达式进行计算。使用示例如下：
python exercise1.py -t="1 -2 * ((60-30+123*99)-(-4*3)/ (16-3*2))" (这里加引号可以使得表达式里支持一些特殊字符比如空格)。
本计算器实现可以接受负数和小数的四则运算（即目前仅支持加减乘除），比如“3*4.0+(-3+5*+3+(4+-4+4))/2”，也支持带有括号。
目前没有实现表达式的查错功能，也没有进行异常捕获处理，所以传入的表达式需要自行保证语义正确，否则会报错。


实现说明：
思路根据武老师视频中提到的那样，先使用正则（self.ptn_sub_exp），将最内层括号里的表达式，该表达式之前的部分和之后的部分分别取出来。
然后计算最内层的表达式的值（calculate_sub方法），用该值替换原来的括号表达式，即将原有之前的部分和之后的部分加上计算好的结果，再继续使用正则分隔最内层括号，直到没有括号为止。
计算最内层表达式值的方法是先将中缀表达式转换为逆波兰式（_get_pol_cal方法，这里为支持负数做了些特殊的改动），然后使用栈的思路来计算逆波兰式的值。
